{"ast":null,"code":"var _jsxFileName = \"/home/nat/Documentos/IC-TCC/Projeto/catalogo-app/src/components/read.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // Importandando bibliotecas necessarias do WoT\n\nimport * as Core from '@node-wot/core';\nimport * as Http from '@node-wot/binding-http';\nimport * as WebSocket from '@node-wot/binding-websockets';\nexport const WoT = {\n  Core,\n  Http,\n  WebSocket\n};\n\nconst Description = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, props.description.id), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.description.title));\n\nexport default class ReadDesc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: [],\n      wot: {}\n    };\n    this._isMounted = false;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    const servient = new WoT.Core.Servient();\n    servient.addClientFactory(new WoT.Http.HttpClientFactory());\n    servient.addClientFactory(new WoT.WebSocket.WebSocketClientFactory());\n    servient.addClientFactory(new WoT.WebSocket.WebSocketSecureClientFactory());\n    servient.start().then(wot => {\n      this.setState({\n        wot\n      });\n    });\n    axios.get('http://localhost:4000/td/' + this.props.match.params.id).then(response => {\n      this.setState({\n        description: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this._isMounted = true;\n  }\n\n  componentDidUpdate() {\n    axios.get('http://localhost:4000/td/').then(response => {\n      this.setState({\n        description: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  descriptionList() {\n    axios.get('http://localhost:4000/td/' + this.props.match.params.id).then(response => {\n      this.state.description.push({\n        name: response.data.name,\n        title: response.data.title,\n        desc: response.data.desc,\n        body: response.data.body\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    return React.createElement(Description, {\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Cat\\xE1logo\"), React.createElement(WoTContext.Provider, {\n      value: {\n        wot: this.state.wot\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\nexport const WoTContext = React.createContext({\n  wot: {}\n});\nexport const withWoT = ComponentToWrap => {\n  class WithWoT extends React.Component {\n    render() {\n      let WoT = this.context.wot;\n      return React.createElement(ComponentToWrap, Object.assign({}, this.props, {\n        WoT: WoT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  WithWoT.contextType = WoTContext;\n  return WithWoT;\n};","map":{"version":3,"sources":["/home/nat/Documentos/IC-TCC/Projeto/catalogo-app/src/components/read.component.js"],"names":["React","Component","axios","Core","Http","WebSocket","WoT","Description","props","description","id","title","ReadDesc","constructor","state","wot","_isMounted","componentWillUnmount","componentDidMount","servient","Servient","addClientFactory","HttpClientFactory","WebSocketClientFactory","WebSocketSecureClientFactory","start","then","setState","get","match","params","response","data","catch","error","console","log","componentDidUpdate","descriptionList","push","name","desc","body","render","marginTop","children","WoTContext","createContext","withWoT","ComponentToWrap","WithWoT","context","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\n\n// Importandando bibliotecas necessarias do WoT\nimport * as Core from '@node-wot/core';\nimport * as Http from '@node-wot/binding-http';\nimport * as WebSocket from '@node-wot/binding-websockets';\n\nexport const WoT = {\n  Core,\n  Http,\n  WebSocket\n};\n\nconst Description = props => (\n    <tr>\n        <td>{props.description.id}</td>\n        <td>{props.description.title}</td>\n    </tr>\n)\n\nexport default class ReadDesc extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {description: [], wot: {}};\n        this._isMounted = false;\n    }\n    \n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    \n    componentDidMount() {\n        \n        const servient = new WoT.Core.Servient();\n        servient.addClientFactory(new WoT.Http.HttpClientFactory());\n        servient.addClientFactory(new WoT.WebSocket.WebSocketClientFactory());\n        servient.addClientFactory(new WoT.WebSocket.WebSocketSecureClientFactory());\n        servient.start().then(wot => {\n            this.setState({ wot });\n        });\n        \n        axios.get('http://localhost:4000/td/'+this.props.match.params.id)\n        .then(response => {\n            this.setState({\n                description: response.data\n            })\n        })\n        .catch(function(error) {\n            console.log(error)\n        })\n        \n        this._isMounted = true;\n    }\n\n    componentDidUpdate() {\n        axios.get('http://localhost:4000/td/')\n        .then(response => {\n            this.setState({description: response.data});\n        })\n        .catch(function (error) {\n            console.log(error);\n        })   \n    }\n\n    descriptionList() {\n        axios.get('http://localhost:4000/td/'+this.props.match.params.id)\n        .then(response => {\n            this.state.description.push({\n                    name:response.data.name,\n                    title: response.data.title,\n                    desc: response.data.desc,\n                    body: response.data.body\n                });\n            })\n        .catch(function(error) {\n            console.log(error)\n        })\n        return <Description description={this.state.description} />;\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: 20 }}>\n                <h3>Catálogo</h3>\n                \n                <WoTContext.Provider value={{ wot: this.state.wot }}>\n                    {this.props.children}\n                </WoTContext.Provider>\n            </div>\n        )\n    }\n}\n\nexport const WoTContext = React.createContext({ wot: {} });\n\nexport const withWoT = ComponentToWrap => {\n  class WithWoT extends React.Component {\n    render() {\n      let WoT = this.context.wot;\n      return <ComponentToWrap {...this.props} WoT={WoT} />;\n    }\n  }\n  WithWoT.contextType = WoTContext;\n  return WithWoT;\n};"]},"metadata":{},"sourceType":"module"}