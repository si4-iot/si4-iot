{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar vm = require(\"vm\");\n\nvar wot_impl_1 = require(\"./wot-impl\");\n\nvar content_serdes_1 = require(\"./content-serdes\");\n\nvar Servient = function () {\n  function Servient() {\n    this.servers = [];\n    this.clientFactories = new Map();\n    this.things = new Map();\n    this.credentialStore = new Map();\n  }\n\n  Servient.prototype.runScript = function (code, filename) {\n    var _this = this;\n\n    if (filename === void 0) {\n      filename = 'script';\n    }\n\n    var script;\n\n    try {\n      script = new vm.Script(code);\n    } catch (err) {\n      var scriptPosition = err.stack.match(/evalmachine\\.<anonymous>\\:([0-9]+)\\n/)[1];\n      console.error(\"Servient found error in '\" + filename + \"' at line \" + scriptPosition + \"\\n    \" + err);\n      return;\n    }\n\n    var context = vm.createContext({\n      \"WoT\": new wot_impl_1.default(this),\n      \"console\": console,\n      \"setInterval\": function (handler, ms) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        return setInterval(function () {\n          try {\n            handler(args);\n          } catch (err) {\n            _this.logScriptError(\"async error in setInterval() in '\" + filename + \"'\", err);\n          }\n        }, ms);\n      },\n      \"clearInterval\": clearInterval,\n      \"setTimeout\": function (handler, ms) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        return setTimeout(function () {\n          try {\n            handler(args);\n          } catch (err) {\n            _this.logScriptError(\"async error in setTimeout() in '\" + filename + \"'\", err);\n          }\n        }, ms);\n      },\n      \"clearTimeout\": clearTimeout,\n      \"setImmediate\": function (handler) {\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n\n        return setImmediate(function () {\n          try {\n            handler(args);\n          } catch (err) {\n            _this.logScriptError(\"async error in setImmediate() in '\" + filename + \"'\", err);\n          }\n        });\n      },\n      \"clearImmediate\": clearImmediate\n    });\n    var options = {\n      \"filename\": filename,\n      \"displayErrors\": true\n    };\n\n    try {\n      script.runInContext(context, options);\n    } catch (err) {\n      this.logScriptError(\"error in '\" + filename + \"'\", err);\n    }\n  };\n\n  Servient.prototype.runPrivilegedScript = function (code, filename) {\n    var _this = this;\n\n    if (filename === void 0) {\n      filename = 'script';\n    }\n\n    var script;\n\n    try {\n      script = new vm.Script(code);\n    } catch (err) {\n      var scriptPosition = err.stack.match(/evalmachine\\.<anonymous>\\:([0-9]+)\\n/)[1];\n      console.error(\"Servient found error in privileged script '\" + filename + \"' at line \" + scriptPosition + \"\\n    \" + err);\n      return;\n    }\n\n    var context = vm.createContext({\n      \"WoT\": new wot_impl_1.default(this),\n      \"console\": console,\n      \"setInterval\": function (handler, ms) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        return setInterval(function () {\n          try {\n            handler(args);\n          } catch (err) {\n            _this.logScriptError(\"async error in setInterval() in privileged '\" + filename + \"'\", err);\n          }\n        }, ms);\n      },\n      \"clearInterval\": clearInterval,\n      \"setTimeout\": function (handler, ms) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        return setTimeout(function () {\n          try {\n            handler(args);\n          } catch (err) {\n            _this.logScriptError(\"async error in setTimeout() in privileged '\" + filename + \"'\", err);\n          }\n        }, ms);\n      },\n      \"clearTimeout\": clearTimeout,\n      \"setImmediate\": function (handler) {\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n\n        return setImmediate(function () {\n          try {\n            handler(args);\n          } catch (err) {\n            _this.logScriptError(\"async error in setImmediate() in privileged '\" + filename + \"'\", err);\n          }\n        });\n      },\n      \"clearImmediate\": clearImmediate,\n      \"require\": require\n    });\n    var options = {\n      \"filename\": filename,\n      \"displayErrors\": true\n    };\n\n    try {\n      script.runInContext(context, options);\n    } catch (err) {\n      this.logScriptError(\"error in privileged '\" + filename + \"'\", err);\n    }\n  };\n\n  Servient.prototype.logScriptError = function (description, error) {\n    var message;\n\n    if (typeof error === \"object\" && error.stack) {\n      var match = error.stack.match(/evalmachine\\.<anonymous>\\:([0-9]+\\:[0-9]+)/);\n\n      if (Array.isArray(match)) {\n        message = \"and halted at line \" + match[1] + \"\\n    \" + error;\n      } else {\n        message = \"and halted with \" + error.stack;\n      }\n    } else {\n      message = \"that threw \" + typeof error + \" instead of Error\\n    \" + error;\n    }\n\n    console.error(\"Servient caught \" + description + \" \" + message);\n  };\n\n  Servient.prototype.addMediaType = function (codec, offered) {\n    if (offered === void 0) {\n      offered = false;\n    }\n\n    content_serdes_1.default.addCodec(codec, offered);\n  };\n\n  Servient.prototype.expose = function (thing) {\n    if (this.servers.length === 0) {\n      console.warn(\"Servient has no servers to expose Things\");\n      return new Promise(function (resolve) {\n        resolve();\n      });\n    }\n\n    console.log(\"Servient exposing '\" + thing.title + \"'\");\n    thing.forms = [];\n\n    for (var name_1 in thing.properties) {\n      thing.properties[name_1].forms = [];\n    }\n\n    for (var name_2 in thing.actions) {\n      thing.actions[name_2].forms = [];\n    }\n\n    for (var name_3 in thing.events) {\n      thing.events[name_3].forms = [];\n    }\n\n    var serverPromises = [];\n    this.servers.forEach(function (server) {\n      serverPromises.push(server.expose(thing));\n    });\n    return new Promise(function (resolve, reject) {\n      Promise.all(serverPromises).then(function () {\n        return resolve();\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  };\n\n  Servient.prototype.addThing = function (thing) {\n    if (thing.id === undefined) {\n      console.warn(\"Servient generating ID for '\" + thing.title + \"'\");\n      thing.id = \"urn:uuid:\" + require(\"uuid\").v4();\n    }\n\n    if (!this.things.has(thing.id)) {\n      this.things.set(thing.id, thing);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  Servient.prototype.getThing = function (name) {\n    if (this.things.has(name)) {\n      return this.things.get(name);\n    } else return null;\n  };\n\n  Servient.prototype.addServer = function (server) {\n    this.things.forEach(function (thing, id) {\n      return server.expose(thing);\n    });\n    this.servers.push(server);\n    return true;\n  };\n\n  Servient.prototype.getServers = function () {\n    return this.servers.slice(0);\n  };\n\n  Servient.prototype.addClientFactory = function (clientFactory) {\n    this.clientFactories.set(clientFactory.scheme, clientFactory);\n  };\n\n  Servient.prototype.hasClientFor = function (scheme) {\n    console.debug(\"Servient checking for '\" + scheme + \"' scheme in \" + this.clientFactories.size + \" ClientFactories\");\n    return this.clientFactories.has(scheme);\n  };\n\n  Servient.prototype.getClientFor = function (scheme) {\n    if (this.clientFactories.has(scheme)) {\n      console.debug(\"Servient creating client for scheme '\" + scheme + \"'\");\n      return this.clientFactories.get(scheme).getClient();\n    } else {\n      throw new Error(\"Servient has no ClientFactory for scheme '\" + scheme + \"'\");\n    }\n  };\n\n  Servient.prototype.getClientSchemes = function () {\n    return Array.from(this.clientFactories.keys());\n  };\n\n  Servient.prototype.addCredentials = function (credentials) {\n    if (typeof credentials === \"object\") {\n      for (var i in credentials) {\n        console.log(\"Servient storing credentials for '\" + i + \"'\");\n        this.credentialStore.set(i, credentials[i]);\n      }\n    }\n  };\n\n  Servient.prototype.getCredentials = function (identifier) {\n    console.log(\"Servient looking up credentials for '\" + identifier + \"'\");\n    return this.credentialStore.get(identifier);\n  };\n\n  Servient.prototype.start = function () {\n    var _this = this;\n\n    var serverStatus = [];\n    this.servers.forEach(function (server) {\n      return serverStatus.push(server.start(_this));\n    });\n    this.clientFactories.forEach(function (clientFactory) {\n      return clientFactory.init();\n    });\n    return new Promise(function (resolve, reject) {\n      Promise.all(serverStatus).then(function () {\n        resolve(new wot_impl_1.default(_this));\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  };\n\n  Servient.prototype.shutdown = function () {\n    this.clientFactories.forEach(function (clientFactory) {\n      return clientFactory.destroy();\n    });\n    this.servers.forEach(function (server) {\n      return server.stop();\n    });\n  };\n\n  return Servient;\n}();\n\nexports.default = Servient;","map":null,"metadata":{},"sourceType":"script"}