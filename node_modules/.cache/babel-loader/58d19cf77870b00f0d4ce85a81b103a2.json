{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TD = require(\"./thing-description\");\n\nvar isAbsoluteUrl = require('is-absolute-url');\n\nvar URLToolkit = require('url-toolkit');\n\nfunction parseTD(td, normalize) {\n  console.debug(\"parseTD() parsing\\n```\\n\" + td + \"\\n```\");\n  var thing = JSON.parse(td.replace(/^\\uFEFF/, ''));\n\n  if (thing[\"@context\"] === undefined) {\n    thing[\"@context\"] = [TD.DEFAULT_CONTEXT];\n  } else if (Array.isArray(thing[\"@context\"])) {\n    var semContext = thing[\"@context\"];\n\n    if (semContext.indexOf(TD.DEFAULT_CONTEXT) === -1) {\n      semContext.push(TD.DEFAULT_CONTEXT);\n    }\n  } else if (thing[\"@context\"] !== TD.DEFAULT_CONTEXT) {\n    var semContext = thing[\"@context\"];\n    thing[\"@context\"] = [semContext, TD.DEFAULT_CONTEXT];\n  }\n\n  addDefaultLanguage(thing);\n\n  if (thing[\"@type\"] === undefined) {\n    thing[\"@type\"] = TD.DEFAULT_THING_TYPE;\n  } else if (Array.isArray(thing[\"@type\"])) {\n    var semTypes = thing[\"@type\"];\n\n    if (semTypes.indexOf(TD.DEFAULT_THING_TYPE) === -1) {\n      semTypes.unshift(TD.DEFAULT_THING_TYPE);\n    }\n  } else if (thing[\"@type\"] !== TD.DEFAULT_THING_TYPE) {\n    var semType = thing[\"@type\"];\n    thing[\"@type\"] = [TD.DEFAULT_THING_TYPE, semType];\n  }\n\n  if (thing.properties !== undefined && thing.properties instanceof Object) {\n    for (var propName in thing.properties) {\n      var prop = thing.properties[propName];\n\n      if (prop.readOnly === undefined || typeof prop.readOnly !== \"boolean\") {\n        prop.readOnly = false;\n      }\n\n      if (prop.writeOnly === undefined || typeof prop.writeOnly !== \"boolean\") {\n        prop.writeOnly = false;\n      }\n\n      if (prop.observable == undefined || typeof prop.observable !== \"boolean\") {\n        prop.observable = false;\n      }\n    }\n  }\n\n  if (thing.actions !== undefined && thing.actions instanceof Object) {\n    for (var actName in thing.actions) {\n      var act = thing.actions[actName];\n\n      if (act.safe === undefined || typeof act.safe !== \"boolean\") {\n        act.safe = false;\n      }\n\n      if (act.idempotent === undefined || typeof act.idempotent !== \"boolean\") {\n        act.idempotent = false;\n      }\n    }\n  }\n\n  if (typeof thing.properties !== 'object' || thing.properties === null) {\n    thing.properties = {};\n  }\n\n  if (typeof thing.actions !== 'object' || thing.actions === null) {\n    thing.actions = {};\n  }\n\n  if (typeof thing.events !== 'object' || thing.events === null) {\n    thing.events = {};\n  }\n\n  if (thing.security === undefined) {\n    console.warn(\"parseTD() found no security metadata\");\n  }\n\n  if (typeof thing.security === \"string\") {\n    thing.security = [thing.security];\n  }\n\n  var allForms = [];\n  var interactionPatterns = {\n    properties: \"Property\",\n    actions: \"Action\",\n    events: \"Event\"\n  };\n\n  for (var pattern in interactionPatterns) {\n    for (var interaction in thing[pattern]) {\n      if (!thing[pattern][interaction].hasOwnProperty(\"forms\")) throw new Error(interactionPatterns[pattern] + \" '\" + interaction + \"' has no forms field\");\n      if (!Array.isArray(thing[pattern][interaction].forms)) thing[pattern][interaction].forms = [thing[pattern][interaction].forms];\n\n      for (var _i = 0, _a = thing[pattern][interaction].forms; _i < _a.length; _i++) {\n        var form = _a[_i];\n        if (!form.hasOwnProperty(\"href\")) throw new Error(\"Form of \" + interactionPatterns[pattern] + \" '\" + interaction + \"' has no href field\");\n        if (!isAbsoluteUrl(form.href) && !thing.hasOwnProperty(\"base\")) throw new Error(\"Form of \" + interactionPatterns[pattern] + \" '\" + interaction + \"' has relative URI while TD has no base field\");\n        allForms.push(form);\n      }\n    }\n  }\n\n  if (thing.hasOwnProperty(\"base\")) {\n    if (normalize === undefined || normalize === true) {\n      console.log(\"parseTD() normalizing 'base' into 'forms'\");\n\n      for (var _b = 0, allForms_1 = allForms; _b < allForms_1.length; _b++) {\n        var form = allForms_1[_b];\n\n        if (!form.href.match(/^([a-z0-9\\+-\\.]+\\:).+/i)) {\n          console.debug(\"parseTDString() applying base '\" + thing.base + \"' to '\" + form.href + \"'\");\n          form.href = URLToolkit.buildAbsoluteURL(thing.base, form.href);\n        }\n      }\n    }\n  }\n\n  return thing;\n}\n\nexports.parseTD = parseTD;\n\nfunction addDefaultLanguage(thing) {\n  if (Array.isArray(thing[\"@context\"])) {\n    var arrayContext = thing[\"@context\"];\n    var languageSet = false;\n\n    for (var _i = 0, arrayContext_1 = arrayContext; _i < arrayContext_1.length; _i++) {\n      var arrayEntry = arrayContext_1[_i];\n\n      if (typeof arrayEntry == \"object\") {\n        if (arrayEntry[\"@language\"] !== undefined) {\n          languageSet = true;\n        }\n      }\n    }\n\n    if (!languageSet) {\n      arrayContext.push({\n        \"@language\": TD.DEFAULT_CONTEXT_LANGUAGE\n      });\n    }\n  }\n}\n\nfunction serializeTD(thing) {\n  var copy = JSON.parse(JSON.stringify(thing));\n\n  if (!copy.security || copy.security.length === 0) {\n    copy.securityDefinitions = {\n      \"nosec_sc\": {\n        \"scheme\": \"nosec\"\n      }\n    };\n    copy.security = [\"nosec_sc\"];\n  }\n\n  if (copy.forms && copy.forms.length === 0) {\n    delete copy.forms;\n  }\n\n  if (copy.properties && Object.keys(copy.properties).length === 0) {\n    delete copy.properties;\n  } else if (copy.properties) {\n    for (var propName in copy.properties) {\n      var prop = copy.properties[propName];\n\n      if (prop.readOnly === undefined || typeof prop.readOnly !== \"boolean\") {\n        prop.readOnly = false;\n      }\n\n      if (prop.writeOnly === undefined || typeof prop.writeOnly !== \"boolean\") {\n        prop.writeOnly = false;\n      }\n\n      if (prop.observable == undefined || typeof prop.observable !== \"boolean\") {\n        prop.observable = false;\n      }\n    }\n  }\n\n  if (copy.actions && Object.keys(copy.actions).length === 0) {\n    delete copy.actions;\n  } else if (copy.actions) {\n    for (var actName in copy.actions) {\n      var act = copy.actions[actName];\n\n      if (act.idempotent === undefined || typeof act.idempotent !== \"boolean\") {\n        act.idempotent = false;\n      }\n\n      if (act.safe === undefined || typeof act.safe !== \"boolean\") {\n        act.safe = false;\n      }\n    }\n  }\n\n  if (copy.events && Object.keys(copy.events).length === 0) {\n    delete copy.events;\n  }\n\n  if (copy.links && copy.links.length === 0) {\n    delete copy.links;\n  }\n\n  var td = JSON.stringify(copy);\n  console.debug(\"serializeTD() produced\\n```\\n\" + td + \"\\n```\");\n  return td;\n}\n\nexports.serializeTD = serializeTD;","map":null,"metadata":{},"sourceType":"script"}