{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"rxjs/Observable\");\n\nvar TD = require(\"@node-wot/td-tools\");\n\nvar exposed_thing_1 = require(\"./exposed-thing\");\n\nvar consumed_thing_1 = require(\"./consumed-thing\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar content_serdes_1 = require(\"./content-serdes\");\n\nvar WoTImpl = function () {\n  function WoTImpl(srv) {\n    this.srv = srv;\n  }\n\n  WoTImpl.prototype.discover = function (filter) {\n    return new Observable_1.Observable(function (subscriber) {\n      subscriber.complete();\n    });\n  };\n\n  WoTImpl.prototype.fetch = function (uri) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var client = _this.srv.getClientFor(helpers_1.default.extractScheme(uri));\n\n      console.info(\"WoTImpl fetching TD from '\" + uri + \"' with \" + client);\n      client.readResource(new TD.Form(uri, content_serdes_1.ContentSerdes.TD)).then(function (content) {\n        client.stop();\n\n        if (content.type !== content_serdes_1.ContentSerdes.TD && content.type !== content_serdes_1.ContentSerdes.JSON_LD) {\n          console.warn(\"WoTImpl received TD with media type '\" + content.type + \"' from \" + uri);\n        }\n\n        var td = content.body.toString();\n\n        try {\n          JSON.parse(td);\n        } catch (err) {\n          console.warn(\"WoTImpl fetched invalid JSON from '\" + uri + \"': \" + err.message);\n        }\n\n        resolve(content.body.toString());\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  };\n\n  WoTImpl.prototype.consume = function (td) {\n    var thing;\n\n    try {\n      thing = TD.parseTD(td, true);\n    } catch (err) {\n      throw new Error(\"Cannot consume TD because \" + err.message);\n    }\n\n    var newThing = helpers_1.default.extend(thing, new consumed_thing_1.default(this.srv));\n    newThing.extendInteractions();\n    console.info(\"WoTImpl consuming TD \" + (newThing.id ? \"'\" + newThing.id + \"'\" : \"without id\") + \" to instantiate ConsumedThing '\" + newThing.title + \"'\");\n    return newThing;\n  };\n\n  WoTImpl.prototype.isWoTThingDescription = function (arg) {\n    return arg.length !== undefined;\n  };\n\n  WoTImpl.prototype.isWoTThingFragment = function (arg) {\n    return arg.title !== undefined;\n  };\n\n  WoTImpl.prototype.addDefaultLanguage = function (thing) {\n    if (Array.isArray(thing[\"@context\"])) {\n      var arrayContext = thing[\"@context\"];\n      var languageSet = false;\n\n      for (var _i = 0, arrayContext_1 = arrayContext; _i < arrayContext_1.length; _i++) {\n        var arrayEntry = arrayContext_1[_i];\n\n        if (typeof arrayEntry == \"object\") {\n          if (arrayEntry[\"@language\"] !== undefined) {\n            languageSet = true;\n          }\n        }\n      }\n\n      if (!languageSet) {\n        arrayContext.push({\n          \"@language\": TD.DEFAULT_CONTEXT_LANGUAGE\n        });\n      }\n    }\n  };\n\n  WoTImpl.prototype.produce = function (model) {\n    var newThing;\n\n    if (this.isWoTThingDescription(model)) {\n      var template = JSON.parse(model);\n      this.addDefaultLanguage(template);\n      newThing = helpers_1.default.extend(template, new exposed_thing_1.default(this.srv));\n    } else if (this.isWoTThingFragment(model)) {\n      this.addDefaultLanguage(model);\n      var template = helpers_1.default.extend(model, new TD.Thing());\n      newThing = helpers_1.default.extend(template, new exposed_thing_1.default(this.srv));\n    } else {\n      throw new Error(\"Invalid Thing model: \" + model);\n    }\n\n    newThing.extendInteractions();\n    console.info(\"WoTImpl producing new ExposedThing '\" + newThing.title + \"'\");\n\n    if (this.srv.addThing(newThing)) {\n      return newThing;\n    } else {\n      throw new Error(\"Thing already exists: \" + newThing.title);\n    }\n  };\n\n  WoTImpl.prototype.register = function (directory, thing) {\n    return new Promise(function (resolve, reject) {\n      reject(new Error(\"WoT.register not implemented\"));\n    });\n  };\n\n  WoTImpl.prototype.unregister = function (directory, thing) {\n    return new Promise(function (resolve, reject) {\n      reject(new Error(\"WoT.unregister not implemented\"));\n    });\n  };\n\n  return WoTImpl;\n}();\n\nexports.default = WoTImpl;\nvar DiscoveryMethod;\n\n(function (DiscoveryMethod) {\n  DiscoveryMethod[DiscoveryMethod[\"any\"] = 0] = \"any\";\n  DiscoveryMethod[DiscoveryMethod[\"local\"] = 1] = \"local\";\n  DiscoveryMethod[DiscoveryMethod[\"directory\"] = 2] = \"directory\";\n  DiscoveryMethod[DiscoveryMethod[\"multicast\"] = 3] = \"multicast\";\n})(DiscoveryMethod = exports.DiscoveryMethod || (exports.DiscoveryMethod = {}));\n\nvar DataType;\n\n(function (DataType) {\n  DataType[\"boolean\"] = \"boolean\";\n  DataType[\"number\"] = \"number\";\n  DataType[\"integer\"] = \"integer\";\n  DataType[\"string\"] = \"string\";\n  DataType[\"object\"] = \"object\";\n  DataType[\"array\"] = \"array\";\n  DataType[\"null\"] = \"null\";\n})(DataType = exports.DataType || (exports.DataType = {}));","map":null,"metadata":{},"sourceType":"script"}