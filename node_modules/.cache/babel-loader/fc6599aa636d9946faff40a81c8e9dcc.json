{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TD = require(\"@node-wot/td-tools\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar content_serdes_1 = require(\"./content-serdes\");\n\nvar td_tools_1 = require(\"@node-wot/td-tools\");\n\nvar UriTemplate = require(\"uritemplate\");\n\nvar ConsumedThing = function (_super) {\n  __extends(ConsumedThing, _super);\n\n  function ConsumedThing(servient) {\n    var _this = _super.call(this) || this;\n\n    _this.getServient = function () {\n      return servient;\n    };\n\n    _this.getClients = new (function () {\n      function class_1() {\n        var _this = this;\n\n        this.clients = new Map();\n\n        this.getMap = function () {\n          return _this.clients;\n        };\n      }\n\n      return class_1;\n    }())().getMap;\n    return _this;\n  }\n\n  ConsumedThing.prototype.extendInteractions = function () {\n    for (var propertyName in this.properties) {\n      var newProp = helpers_1.default.extend(this.properties[propertyName], new ConsumedThingProperty(propertyName, this));\n      this.properties[propertyName] = newProp;\n    }\n\n    for (var actionName in this.actions) {\n      var newAction = helpers_1.default.extend(this.actions[actionName], new ConsumedThingAction(actionName, this));\n      this.actions[actionName] = newAction;\n    }\n\n    for (var eventName in this.events) {\n      var newEvent = helpers_1.default.extend(this.events[eventName], new ConsumedThingEvent(eventName, this));\n      this.events[eventName] = newEvent;\n    }\n  };\n\n  ConsumedThing.prototype.getClientFor = function (forms, op) {\n    var _this = this;\n\n    if (forms.length === 0) {\n      throw new Error(\"ConsumedThing '\" + this.title + \"' has no links for this interaction\");\n    }\n\n    var schemes = forms.map(function (link) {\n      return helpers_1.default.extractScheme(link.href);\n    });\n    var cacheIdx = schemes.findIndex(function (scheme) {\n      return _this.getClients().has(scheme);\n    });\n\n    if (cacheIdx !== -1) {\n      console.debug(\"ConsumedThing '\" + this.title + \"' chose cached client for '\" + schemes[cacheIdx] + \"'\");\n      var client = this.getClients().get(schemes[cacheIdx]);\n      var form = forms[cacheIdx];\n\n      for (var _i = 0, forms_1 = forms; _i < forms_1.length; _i++) {\n        var f = forms_1[_i];\n        if (f.op != undefined) if (f.op.indexOf(op) != -1 && f.href.indexOf(schemes[cacheIdx] + \":\") != -1) {\n          form = f;\n          break;\n        }\n      }\n\n      if (form == null) {\n        form = forms[cacheIdx];\n      }\n\n      return {\n        client: client,\n        form: form\n      };\n    } else {\n      console.debug(\"ConsumedThing '\" + this.title + \"' has no client in cache (\" + cacheIdx + \")\");\n      var srvIdx = schemes.findIndex(function (scheme) {\n        return _this.getServient().hasClientFor(scheme);\n      });\n      if (srvIdx === -1) throw new Error(\"ConsumedThing '\" + this.title + \"' missing ClientFactory for '\" + schemes + \"'\");\n      var client = this.getServient().getClientFor(schemes[srvIdx]);\n      console.log(\"ConsumedThing '\" + this.title + \"' got new client for '\" + schemes[srvIdx] + \"'\");\n\n      if (this.security && this.securityDefinitions && Array.isArray(this.security) && this.security.length > 0) {\n        console.log(\"ConsumedThing '\" + this.title + \"' setting credentials for \" + client);\n        var scs = [];\n\n        for (var _a = 0, _b = this.security; _a < _b.length; _a++) {\n          var s = _b[_a];\n          var ws = this.securityDefinitions[s + \"\"];\n\n          if (ws) {\n            scs.push(ws);\n          }\n        }\n\n        client.setSecurity(scs, this.getServient().getCredentials(this.id));\n      }\n\n      this.getClients().set(schemes[srvIdx], client);\n      var form = null;\n\n      for (var _c = 0, forms_2 = forms; _c < forms_2.length; _c++) {\n        var f = forms_2[_c];\n        if (f.op != undefined) if (f.op.indexOf(op) != -1 && f.href.indexOf(schemes[srvIdx] + \":\") != -1) {\n          form = f;\n          break;\n        }\n      }\n\n      if (form == null) {\n        form = forms[srvIdx];\n      }\n\n      return {\n        client: client,\n        form: form\n      };\n    }\n  };\n\n  ConsumedThing.prototype.handleUriVariables = function (form, parameter) {\n    var ut = UriTemplate.parse(form.href);\n    var updatedHref = ut.expand(parameter == undefined ? {} : parameter);\n\n    if (updatedHref != form.href) {\n      var updForm = new td_tools_1.Form(updatedHref, form.contentType);\n      updForm.op = form.op;\n      updForm.security = form.security;\n      updForm.scopes = form.scopes;\n      updForm.response = form.response;\n      form = updForm;\n      console.log(\"ConsumedThing '\" + this.title + \"' update form URI to \" + form.href);\n    }\n\n    return form;\n  };\n\n  return ConsumedThing;\n}(TD.Thing);\n\nexports.default = ConsumedThing;\n\nvar ConsumedThingProperty = function (_super) {\n  __extends(ConsumedThingProperty, _super);\n\n  function ConsumedThingProperty(name, thing) {\n    var _this = _super.call(this) || this;\n\n    _this.getName = function () {\n      return name;\n    };\n\n    _this.getThing = function () {\n      return thing;\n    };\n\n    return _this;\n  }\n\n  ConsumedThingProperty.prototype.read = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var _a = _this.getThing().getClientFor(_this.forms, \"readproperty\"),\n          client = _a.client,\n          form = _a.form;\n\n      if (!client) {\n        reject(new Error(\"ConsumedThing '\" + _this.getThing().title + \"' did not get suitable client for \" + form.href));\n      } else {\n        console.log(\"ConsumedThing '\" + _this.getThing().title + \"' reading \" + form.href);\n        form = _this.getThing().handleUriVariables(form, undefined);\n        client.readResource(form).then(function (content) {\n          if (!content.type) content.type = form.contentType;\n\n          try {\n            var value = content_serdes_1.default.contentToValue(content, _this);\n            resolve(value);\n          } catch (_a) {\n            reject(new Error(\"Received invalid content from Thing\"));\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      }\n    });\n  };\n\n  ConsumedThingProperty.prototype.write = function (value) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var _a = _this.getThing().getClientFor(_this.forms, \"writeproperty\"),\n          client = _a.client,\n          form = _a.form;\n\n      if (!client) {\n        reject(new Error(\"ConsumedThing '\" + _this.getThing().title + \"' did not get suitable client for \" + form.href));\n      } else {\n        console.log(\"ConsumedThing '\" + _this.getThing().title + \"' writing \" + form.href + \" with '\" + value + \"'\");\n        var content = content_serdes_1.default.valueToContent(value, _this, form.contentType);\n        form = _this.getThing().handleUriVariables(form, value);\n        client.writeResource(form, content).then(function () {\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      }\n    });\n  };\n\n  ConsumedThingProperty.prototype.subscribe = function (next, error, complete) {\n    var _this = this;\n\n    var _a = this.getThing().getClientFor(this.forms, \"observeproperty\"),\n        client = _a.client,\n        form = _a.form;\n\n    if (!client) {\n      error(new Error(\"ConsumedThing '\" + this.getThing().title + \"' did not get suitable client for \" + form.href));\n    } else {\n      console.log(\"ConsumedThing '\" + this.getThing().title + \"' subscribing to \" + form.href);\n      return client.subscribeResource(form, function (content) {\n        if (!content.type) content.type = form.contentType;\n\n        try {\n          var value = content_serdes_1.default.contentToValue(content, _this);\n          next(value);\n        } catch (_a) {\n          error(new Error(\"Received invalid content from Thing\"));\n        }\n      }, function (err) {\n        error(err);\n      }, function () {\n        complete();\n      });\n    }\n  };\n\n  return ConsumedThingProperty;\n}(TD.ThingProperty);\n\nvar ConsumedThingAction = function (_super) {\n  __extends(ConsumedThingAction, _super);\n\n  function ConsumedThingAction(name, thing) {\n    var _this = _super.call(this) || this;\n\n    _this.getName = function () {\n      return name;\n    };\n\n    _this.getThing = function () {\n      return thing;\n    };\n\n    return _this;\n  }\n\n  ConsumedThingAction.prototype.invoke = function (parameter) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var _a = _this.getThing().getClientFor(_this.forms, \"invokeaction\"),\n          client = _a.client,\n          form = _a.form;\n\n      if (!client) {\n        reject(new Error(\"ConsumedThing '\" + _this.getThing().title + \"' did not get suitable client for \" + form.href));\n      } else {\n        console.log(\"ConsumedThing '\" + _this.getThing().title + \"' invoking \" + form.href + (parameter !== undefined ? \" with '\" + parameter + \"'\" : \"\"));\n        var input = void 0;\n\n        if (parameter !== undefined) {\n          input = content_serdes_1.default.valueToContent(parameter, _this, form.contentType);\n        }\n\n        form = _this.getThing().handleUriVariables(form, parameter);\n        client.invokeResource(form, input).then(function (content) {\n          if (!content.type) content.type = form.contentType;\n\n          if (form.response) {\n            if (content.type !== form.response.contentType) {\n              reject(new Error(\"Unexpected type in response\"));\n            }\n          }\n\n          try {\n            var value = content_serdes_1.default.contentToValue(content, _this.output);\n            resolve(value);\n          } catch (_a) {\n            reject(new Error(\"Received invalid content from Thing\"));\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      }\n    });\n  };\n\n  return ConsumedThingAction;\n}(TD.ThingAction);\n\nvar ConsumedThingEvent = function (_super) {\n  __extends(ConsumedThingEvent, _super);\n\n  function ConsumedThingEvent(name, thing) {\n    var _this = _super.call(this) || this;\n\n    _this.getName = function () {\n      return name;\n    };\n\n    _this.getThing = function () {\n      return thing;\n    };\n\n    return _this;\n  }\n\n  ConsumedThingEvent.prototype.subscribe = function (next, error, complete) {\n    var _this = this;\n\n    var _a = this.getThing().getClientFor(this.forms, \"subscribeevent\"),\n        client = _a.client,\n        form = _a.form;\n\n    if (!client) {\n      error(new Error(\"ConsumedThing '\" + this.getThing().title + \"' did not get suitable client for \" + form.href));\n    } else {\n      console.log(\"ConsumedThing '\" + this.getThing().title + \"' subscribing to \" + form.href);\n      return client.subscribeResource(form, function (content) {\n        if (!content.type) content.type = form.contentType;\n\n        try {\n          var value = content_serdes_1.default.contentToValue(content, _this);\n          next(value);\n        } catch (_a) {\n          error(new Error(\"Received invalid content from Thing\"));\n        }\n      }, function (err) {\n        error(err);\n      }, function () {\n        complete();\n      });\n    }\n  };\n\n  return ConsumedThingEvent;\n}(TD.ThingEvent);","map":null,"metadata":{},"sourceType":"script"}