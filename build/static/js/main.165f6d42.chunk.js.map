{"version":3,"sources":["logo.png","icon.png","reducers/td.reducer.js","reducers/index.js","actions/types.js","store.js","components/edit.component.js","actions/td.actions.js","components/list.component.js","components/read.component.js","components/search.component.js","components/result.component.js","components/create.component.js","components/add.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","descriptions","description","loading","combineReducers","td","state","action","type","payload","filter","_id","find","desc","response","updatedDesc","map","console","log","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Edit","props","onChangeID","bind","onChangeTitle","onSubmit","id","title","axios","get","this","match","params","then","setState","data","catch","error","e","target","value","preventDefault","obj","post","res","history","push","style","marginTop","className","onChange","body","Component","add","dispatch","err","status","search","consult","setLoading","Description","to","List","currentDescription","i","key","descriptionList","connect","Read","getTD","aux","JSON","stringify","printContext","securityDefinitions","security","properties","actions","events","Search","texto","onChangeTexto","rows","cols","Result","length","color","Create","securityDef","onChangeContext","onChangeActions","onChangeEvents","onChangeProperties","onChangeSecurity","onChangeSecurityDef","newTD","context","Add","url","urls","multidescription","onChangeURL","onChangeURLS","onSubmitMulti","App","rel","href","favicon","src","logo","width","height","alt","path","exact","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.165f6d42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c4c3467b.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.9a3b0f3f.png\";","import { GET ,GET_TD, ADD, UPDATE, DELETE, SEARCH, LOADING } from '../actions/types';\n\nconst initialState = {\n    descriptions: [],\n    description: [],\n    loading: false\n};\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n        case GET:\n            return {\n                ...state,\n                descriptions: action.payload,\n                loading: false\n            };\n        case DELETE:\n            return {\n                ...state,\n                descriptions: state.descriptions.filter(description => description._id !== action.payload)\n            };\n        case GET_TD:\n            return {\n                ...state,\n                description: state.descriptions.find(desc => desc._id === action.payload)\n            };\n        case ADD:\n            return {\n                ...state,\n                descriptions: [action.payload, ...state.descriptions]\n            };\n        case UPDATE:\n            const response = action.payload\n            const updatedDesc = state.descriptions.map((desc) => {\n                if (desc._id !== response._id) {\n                    return desc;\n                }\n                return [action.payload, ...state.description]\n            })\n            return {\n                ...state,\n                descriptions : updatedDesc\n            };\n        case SEARCH:\n            console.log(action.payload)\n            return {\n                ...state,\n                description: action.payload\n            };\n        case LOADING:\n            return{\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    }\n  }","import { combineReducers } from 'redux';\nimport tdReducer from './td.reducer';\n\n//Reducer - Usados ​​para atualizar o state do objeto na store.\n\nexport default combineReducers({\n    td: tdReducer\n});\n","//Definicao das variaveis que recevem os nomes das acoes da aplicação:\nexport const GET = 'GET';\nexport const GET_TD = 'GET_TD';\nexport const ADD = 'ADD';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const SEARCH = 'SEARCH';\nexport const LOADING = 'LOADING';","\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n/*\nA store contém toda a árvore de estados do aplicativo. \nA única maneira de alterar o estado dentro dele é despachar uma ação nele. \nContém um objeto e seus métodos.\n*/\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\n\nexport default store;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class Edit extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeID = this.onChangeID.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            id: '',\n            title: ''\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/td/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    title: response.data.title\n                })\n            })\n            .catch(function(error) {\n                console.log(error)\n            })\n    }\n\n    onChangeID(e) {\n        this.setState({\n            id: e.target.value\n        });\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const obj = {\n            id: this.state.id,\n            title: this.state.title\n        };\n        axios.post('http://localhost:4000/td/update/'+this.props.match.params.id, obj)\n            .then(res => console.log(res.data));\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 20}}>\n                <h3>Alterar TD:</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>ID: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.id}\n                                onChange={this.onChangeID}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <textarea type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.body}\n                                onChange={this.onChangeTitle}\n                                />\n                    </div>\n                    <br/>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Update Description\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import axios from 'axios';\nimport { GET ,GET_TD, ADD, UPDATE, DELETE, SEARCH, LOADING } from '../actions/types';\n//Objetos JavaScript que enviam dados do seu aplicativo para a store.\n//Implementacao das acoes - Interage com o reducer - Faz as requisicoes para o backend:\n  // Acessa o SWITCH do reducer:\nexport const get = () => dispatch => {\n  dispatch(setLoading());\n  axios\n    .get('/td/')\n    .then( res => \n      dispatch({\n        type: GET,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n        console.log('Falha ao localizar catalogo: ' + err.response.data + err.response.status)\n    );\n};\n\nexport const getTD = id => dispatch => {\n  dispatch(setLoading());\n  axios\n    .get(`/td/${id}`,id)\n    .then(res =>\n      dispatch({\n        type: GET_TD,\n        payload: id\n      })\n    )\n    .catch(err =>\n      console.log('Falha ao localizar TD: ' + err.response.data + err.response.status)\n    );\n};\n\nexport const add = td => dispatch  => {\n  axios\n    .post('/td/add', td)\n    .then( res => \n      dispatch({\n        type: ADD,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n        console.log('Falha ao armazenar: ' + err.response.data + err.response.status)\n    );\n};\n\nexport const deleteTD = id => dispatch => {\n  axios\n    .delete(`/td/delete/${id}`, id)\n    .then(res =>\n      dispatch({\n        type: DELETE,\n        payload: id\n      })\n    )\n    .catch(err =>\n        console.log('Falha ao deletar TD: ' + err.response.data + err.response.status)\n    );\n};\n\nexport const updateTD = id => dispatch => {\n  axios\n    .post(`/td/update/${id}`, id)\n    .then(res =>\n      dispatch({\n        type: UPDATE,\n        payload: id\n      })\n    )\n    .catch(err =>\n        console.log('Falha ao editar TD: ' + err.response.data + err.response.status)\n    );\n};\n\nexport const search = consult => dispatch => {\n  console.log(\"Action SEARCH acionada - consulta = \" + consult)\n  axios\n    .post('/td/search/', {consult})\n    .then(res =>\n      dispatch({\n        type: SEARCH,\n        payload: res.data\n      })\n    )\n    .catch(err => console.log('Falha ao localizar consulta: ')\n    );\n}; \n\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { get } from '../actions/td.actions';\nimport PropTypes from 'prop-types';\n\n//Exibicao de uma descricao\nconst Description = props => (\n    <tr>\n        <td>{props.desc.id}</td>\n        <td>{props.desc.title}</td>\n        <td>\n            <Link to={\"/edit/\"+props.desc._id}>Editar</Link>\n        </td>\n        <td>\n            <Link to={\"/read/\"+props.desc._id}>Visualizar</Link>\n        </td>\n    </tr>\n)\n\nclass List extends Component {\n\n    //Faz o request das descricoes ao servidor através da action GET:\n    componentDidMount() {\n        this.props.get();\n    }\n\n    //Lista as descricoes contidas no vetor description do state:\n    descriptionList() {\n        const { descriptions } = this.props.td;\n        return descriptions.map(function(currentDescription, i) {\n             return <Description desc={currentDescription} key={i} />;\n        });\n    }\n\n    //Rendeniza o component:\n    render() {\n        return (\n            <div style={{ marginTop: 20 }}>\n                <h3>Catálogo</h3>\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Title</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.descriptionList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n// Props do componente LIST:\nList.propTypes = {\n    get: PropTypes.func.isRequired,\n    td: PropTypes.object.isRequired\n};\n\n//Permite que o state usado no reducer seja mapeado no props do Componente\n    //Faz refencia ao root reducer - index.js\nconst mapStateToProps = state => ( {\n    td: state.td\n});\n\nexport default connect( mapStateToProps, { get })(List);","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { getTD } from '../actions/td.actions';\nimport PropTypes from 'prop-types';\n \nclass Read extends Component {\n\n    state = {\n        description: []\n    };\n    \n    componentDidMount() {\n        this.props.getTD(this.props.match.params.id);\n    }\n\n    printContext(description){\n        for(var aux in description) {\n            if (aux === \"@context\"){\n                return JSON.stringify(description[aux]);  \n            }\n        }\n    }\n\n    render() {\n        const { description } = this.props.td;\n        //let aux;\n        return (\n            <div style={{ marginTop: 20 }}>\n                <h3>Thing Description:</h3>\n                <table className=\"table table-striped \" style={{ marginTop: 20 }}>\n                    <thead className=\"table-primary\">\n                        <tr>\n                            <th>Context</th>\n                            <th>ID</th>\n                            <th>Title</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{this.printContext(description)}</td>\n                            <td>{description.id}</td>\n                            <td>{description.title}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <hr/>\n                <table className=\"table table-striped \" style={{ marginTop: 20 }}>\n                    <thead className=\"table-primary\">\n                        <tr>\n                            <th>Security Definitions</th>\n                            <th>Security</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{JSON.stringify(description.securityDefinitions, null)}</td>\n                            <td>{JSON.stringify(description.security, null)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <hr/>\n                <table className=\"table table-striped \" style={{ marginTop: 20 }}>\n                    <thead className=\"table-primary\">\n                        <tr>\n                            <th>Properties</th>\n                            <th>Actions</th>\n                            <th>Events</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{JSON.stringify(description.properties,null)}</td>\n                            <td>{JSON.stringify(description.actions, null)}</td>\n                            <td>{JSON.stringify(description.events, null)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n\n// Props do componente LIST:\nRead.propTypes = {\n    getTD: PropTypes.func.isRequired,\n    td: PropTypes.object.isRequired\n};\n\n//Permite que o state usado no reducer seja mapeado no props do Componente\n    //Faz refencia ao root reducer - index.js\nconst mapStateToProps = state => ( {\n    td: state.td\n});\n\nexport default connect( mapStateToProps, { getTD })(Read);","import React, {Component} from 'react';\n\n//Redux Components\nimport { connect } from 'react-redux';\nimport { search } from '../actions/td.actions';\nimport PropTypes from 'prop-types';\n\n\nclass Search extends Component {\n\n    state = {\n        texto: ''\n    }\n    \n    onChangeTexto = e => {\n        this.setState({ texto: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        console.log(\"submit : \")\n        console.log(this.state.texto)\n\n        //Fazendo uma nova consulta ao catalogo via search action\n        this.props.search(this.state.texto);\n        this.props.history.push('/result');\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 20}}>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Localizar TD's disponíveis </label>\n                            <div className=\"formul\">\n                                <textarea className=\"texto-form\" id=\"busca\" rows=\"5\" cols=\"100\" \n                                value={this.state.texto}\n                                onChange={this.onChangeTexto}></textarea>\n                            </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"text-center\">\n                            <input type=\"submit\" value=\"Buscar\" className=\"btn btn-outline-dark\" /> \n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n// Props do componente LIST:\nSearch.propTypes = {\n    search: PropTypes.func.isRequired,\n    td: PropTypes.object.isRequired\n};\n\n//Permite que o state usado no reducer seja mapeado no props do Componente\n    //Faz refencia ao root reducer - index.js\nconst mapStateToProps = state => ( {\n    td: state.td\n});\n\nexport default connect( mapStateToProps, { search })(Search);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n//Redux Components\nimport { connect } from 'react-redux';\nimport { search } from '../actions/td.actions';\nimport PropTypes from 'prop-types';\n\n//Exibicao de uma descricao\nconst Description = props => (\n    <tr>\n        <td>{props.desc.id}</td>\n        <td>{props.desc.title}</td>\n        <td>\n            <Link to={\"/edit/\"+props.desc._id}>Editar</Link>\n        </td>\n        <td>\n            <Link to={\"/read/\"+props.desc._id}>Visualizar</Link>\n        </td>\n    </tr>\n)\nclass Result extends Component {\n    \n    descriptionList() {        \n        const { description } = this.props.td;\n        console.log('DESCRIpTION: '+description)\n        if (description.length === 0){\n            return (<div><p style={{color:\"red\"}}>Nenhuma descricao encontrada!</p></div>);\n        }\n        else {\n            return description.map(function(currentDescription, i) {\n                return <Description desc={currentDescription} key={i} />;\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: 20 }}>\n                <label>Dispositivos encontrados</label>\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Title</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.descriptionList()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n// Props do componente LIST:\nResult.propTypes = {\n    search: PropTypes.func.isRequired,\n    td: PropTypes.object.isRequired\n};\n\n//Permite que o state usado no reducer seja mapeado no props do Componente\n    //Faz refencia ao root reducer - index.js\nconst mapStateToProps = state => ( {\n    td: state.td\n});\n\nexport default connect( mapStateToProps, {search})(Result);","import React, {Component} from 'react';\n\n//Redux Components\nimport { connect } from 'react-redux';\nimport { add } from '../actions/td.actions';\nimport PropTypes from 'prop-types';\n\nclass Create extends Component {\n    \n    state = {\n        '@context': '',\n        '@type': '',\n        id: '',\n        title: '',\n        securityDef: '',\n        security: '',\n        properties: '',\n        actions: '',\n        events: ''\n    };\n    \n    onChangeContext = e => {\n        this.setState({ '@context': e.target.value });\n    };\n\n    onChangeActions = e => {\n        this.setState({ actions: e.target.value });\n    };\n\n    onChangeEvents = e => {\n        this.setState({ events: e.target.value });\n    };\n\n    onChangeID = e => {\n        this.setState({ id: e.target.value });\n    };\n\n    onChangeProperties = e => {\n        this.setState({ properties: e.target.value });\n    };\n\n    onChangeSecurity = e => {\n        this.setState({ security: e.target.value });\n    };\n\n    onChangeSecurityDef = e => {\n        this.setState({ securityDef: e.target.value });\n    };\n\n    onChangeTitle = e => {\n        this.setState({ title: e.target.value });\n    };\n    \n    onSubmit = e => {\n        e.preventDefault();\n        \n        console.log(`Form submitted:`);\n        \n        //Nova descricao\n        const newTD = {\n            '@context': this.state.context,\n            id: this.state.id,\n            title: this.state.title,\n            securityDef: this.state.securityDef,\n            security: this.state.security,\n            properties: this.state.properties,\n            actions: this.state.actions,\n            events: this.state.events\n        }\n        console.log(newTD)\n    \n        //Adicionando nova descricao via add action\n        this.props.add(newTD);\n\n        this.setState({\n            '@context': '',\n            id: '',\n            title: '',\n            securityDef: '',\n            security: '',\n            properties: '',\n            actions: '',\n            events: ''\n        });\n    };\n\n    render() {\n        return (\n            <div style={{marginTop: 20}}>\n                <h3>Adicionar TD</h3>\n                <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                        <label>Context: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.context}\n                                onChange={this.onChangeContext}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>ID: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.id}\n                                onChange={this.onChangeID}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.title}\n                                onChange={this.onChangeTitle}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Security Definitions: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.securityDef}\n                                onChange={this.onChangeSecurityDef}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Security: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.security}\n                                onChange={this.onChangeSecurity}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Properties: </label>\n                        <textarea  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.properties}\n                                onChange={this.onChangeProperties}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Actions: </label>\n                        <textarea  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.actions}\n                                onChange={this.onChangeActions}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Events: </label>\n                        <textarea type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.events}\n                                onChange={this.onChangeEvents}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Adicionar\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n// Props do componente LIST:\nCreate.propTypes = {\n    add: PropTypes.func.isRequired,\n    td: PropTypes.object.isRequired\n};\n\n//Permite que o state usado no reducer seja mapeado no props do Componente\n    //Faz refencia ao root reducer - index.js\nconst mapStateToProps = state => ( {\n    td: state.td\n});\n\nexport default connect( mapStateToProps, { add })(Create);","import React, {Component} from 'react';\nimport axios from 'axios';\n\n\n//React Components\nimport { connect } from 'react-redux';\nimport { add } from '../actions/td.actions';\nimport PropTypes from 'prop-types';\n\nclass Add extends Component {\n\n    state = {\n        url: '',\n        urls:'',\n        description: {},\n        multidescription: []\n    }\n\n    onChangeURL = e => {\n        this.setState({ url: e.target.value });\n    };\n\n    onChangeURLS = e => {\n        this.setState({ urls: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        var url = this.state.url\n\n        console.log(`Adicionando um TD: ` + url);\n\n        axios.get(url)\n            .then(response => {\n                this.setState({description: response.data});\n                console.log('Descricao encontrada!')\n                //Adicionando nova descricao via add action\n                this.props.add(this.state.description);\n            })\n            .catch(function (error) {\n                console.log('Erro ao obter URL');\n            })\n    }\n\n    onSubmitMulti = e => {\n        e.preventDefault();\n        \n        var urls = this.state.urls\n\n        console.log(`Form submitted: ` + urls);\n\n        axios.get(urls)\n            .then(response => {\n                this.setState({multidescription: response.data});\n                console.log('URL encontrada!')\n                console.log('Qtd de dispositivos: '+ this.state.multidescription.length)\n                this.state.multidescription.map(function(currentDescription, i) {\n                    var desc = ''\n                    console.log('Thing: '+currentDescription)\n                    axios.get(currentDescription)\n                        .then(response => {\n                            console.log('Descricao: ' + desc)\n                            desc =  response.data\n                            //Adicionando nova descricao via add action\n                            this.props.add(desc);\n                        })\n                        .catch(function (error) {\n                            console.log('Erro ao obter Descricao');\n                        })\n                    return 0;\n                })\n            })\n            .catch(function (error) {\n                console.log('Erro ao obter URL');\n            })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 20}}>\n                <h3>Adicionar TD</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>URL:</label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.url}\n                                onChange={this.onChangeURL}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Adicionar\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n                <br></br><hr></hr><br></br>\n                <h3>Multiplas TD's</h3>\n                <form onSubmit={this.onSubmitMulti}>\n                    <div className=\"form-group\">\n                        <label>URL:</label>\n                        <input type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.urls}\n                                onChange={this.onChangeURLS}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Adicionar\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n// Props do componente LIST:\nAdd.propTypes = {\n    add: PropTypes.func.isRequired,\n    td: PropTypes.object.isRequired\n};\n\n//Permite que o state usado no reducer seja mapeado no props do Componente\n    //Faz refencia ao root reducer - index.js\nconst mapStateToProps = state => ( {\n    td: state.td\n});\n\nexport default connect( mapStateToProps, { add })(Add);","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Helmet from 'react-helmet'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nimport Edit from \"./components/edit.component\";\nimport List from \"./components/list.component\";\nimport Read from \"./components/read.component\";\nimport Search from \"./components/search.component\";\nimport Result from \"./components/result.component\";\nimport Create from \"./components/create.component\";\nimport Add from \"./components/add.component\";\n\nimport logo from \"./logo.png\";\n\nimport favicon from \"./icon.png\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Helmet>\n            <title>si4IoT</title>\n            <link rel=\"icon\" type=\"image/png\" href={favicon} />\n          </Helmet>\n          <div className=\"container\">\n            <div className=\"jumbotron blue-grey lighten-5\" >\n              <p className=\"card-title h1\">Semantic Interoperability for Internet of Things</p>\n              <p className=\"indigo-text my-4 font-weight-bold\">Testando coleta e representação de dados de um sensor</p>\n            </div>\n\n            <nav className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\n              <a className=\"navbar-brand\" href=\"/\">\n                <img src={logo} width=\"90\" height=\"30\" alt=\"logo\" className=\"d-inline-block align-top\"/>\n              </a>\n              <div className=\"collpase nav-collapse\" >\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"navbar-item\">\n                    <Link to=\"/\" className=\"nav-link\">Listar</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/create\" className=\"nav-link\">Adicionar</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/add\" className=\"nav-link\">Adicionar URL</Link>\n                  </li>\n                  <li className=\"navbar-item\">\n                    <Link to=\"/search\" className=\"nav-link\">Buscar</Link>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n            <Route path=\"/\" exact component={List} />\n            <Route path=\"/edit/:id\" component={Edit} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/result\" component={Result} />\n            <Route path=\"/read/:id\" component={Read} />\n            <Route path=\"/create/\" component={Create} />\n            <Route path=\"/add/\" component={Add} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}